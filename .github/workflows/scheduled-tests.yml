name: Scheduled GCS Tests

# Run tests daily to monitor for phishing warnings and GCS changes
on:
  schedule:
    # Run every day at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  scheduled-test:
    name: Daily GCS Phishing Check
    runs-on: ubuntu-latest

    env:
      GCS_PROJECT_ID: ${{ secrets.GCS_PROJECT_ID }}
      GCS_BUCKET_NAME: ${{ secrets.GCS_BUCKET_NAME }}
      GCS_TEST_FILE_PREFIX: test-scheduled-

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCS_PROJECT_ID }}

      - name: Install Playwright browsers
        run: |
          mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install firefox"

      - name: Run Sign URL tests (phishing detection)
        run: |
          mvn test -Dtest=SignUrlTest

      - name: Upload test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: scheduled-test-reports-${{ github.run_number }}
          path: |
            target/surefire-reports/
            target/screenshots/
          retention-days: 90

      - name: Check for phishing warnings
        if: always()
        run: |
          if grep -r "phishing" target/surefire-reports/ 2>/dev/null; then
            echo "::error::‚ö†Ô∏è CRITICAL: Phishing warning detected in signed URLs!"
            exit 1
          else
            echo "‚úÖ No phishing warnings detected"
          fi

      - name: Cleanup test files
        if: always()
        run: |
          gcloud storage rm gs://${{ secrets.GCS_BUCKET_NAME }}/test-scheduled-* --recursive || echo "Cleanup complete"

      - name: Create issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const title = 'üö® Scheduled Test Failure - Possible Phishing Warning';
            const body = `
            ## Scheduled Test Failure Alert

            The daily scheduled tests have failed. This could indicate:

            1. **Phishing warnings detected** on GCS signed URLs (CRITICAL)
            2. GCS API changes
            3. Authentication issues
            4. Network problems

            **Run ID:** ${{ github.run_id }}
            **Timestamp:** ${new Date().toISOString()}

            ### Action Required
            1. Check the [workflow logs](../actions/runs/${{ github.run_id }})
            2. Review test screenshots in artifacts
            3. Investigate any phishing warnings immediately

            ### Next Steps
            - Review the test reports in the workflow artifacts
            - Check if Google Cloud Storage has made any recent changes
            - Verify that signed URLs are still functioning correctly

            ---
            *This issue was automatically created by the scheduled test workflow.*
            `;

            // Check if there's already an open issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['scheduled-test-failure']
            });

            if (issues.data.length === 0) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['scheduled-test-failure', 'critical']
              });
            } else {
              // Comment on existing issue
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issues.data[0].number,
                body: `Another failure detected at ${new Date().toISOString()}. [View run](../actions/runs/${{ github.run_id }})`
              });
            }
